@startuml
class OrganizerMenuFragment {
    -- Attributes --
    - eventId : String
    - viewWaitingListButton : Button
    - sampleAttendeesButton : Button
    - viewCanceledListButton : Button
    - viewAcceptedListButton : Button
    - viewSignedListButton : Button
    - drawReplacementButton : Button
    - backToEventPageButton : Button
    - generateQRCode : Button
    - QRImage : ImageView
    - qrCodeGenerator : QRcodeGenerator
    - replacementSize : int
    - waitingList : WaitingList
    - maxParticipant : int

    -- Methods --
    + OrganizerMenuFragment()
    + newInstance(eventId: String) : OrganizerMenuFragment
    + onCreate(savedInstanceState: Bundle) : void
    + onCreateView(inflater: LayoutInflater, container: ViewGroup, savedInstanceState: Bundle) : View
    - navigateToViewWaitingList() : void
    - navigateToViewSignedList() : void
    - navigateToCanceledList() : void
    - navigateToViewAcceptedList() : void
    - sampleAttendees() : void
    - promptReplacementSize() : void
    - drawReplacement(replacementSize: int) : void
    - generateAndDisplayQRCode(eventID: String) : void
    - navigateBackToEventPage() : void
}

class ViewAcceptedListFragment {
    -- Attributes --
    - acceptedListView : ListView
    - backButton : Button
    - eventId : String
    - waitingList : WaitingList

    -- Methods --
    + newInstance(eventId: String) : ViewAcceptedListFragment
    + onCreate(savedInstanceState: Bundle) : void
    + onCreateView(inflater: LayoutInflater, container: ViewGroup, savedInstanceState: Bundle) : View
    - displayAcceptedList() : void
    - navigateBackToOrganizerMenu() : void
}

class ViewCanceledListFragment {
    -- Attributes --
    - canceledListView : ListView
    - backButton : Button
    - eventId : String
    - waitingList : WaitingList

    -- Methods --
    + newInstance(eventId: String) : ViewCanceledListFragment
    + onCreate(savedInstanceState: Bundle) : void
    + onCreateView(inflater: LayoutInflater, container: ViewGroup, savedInstanceState: Bundle) : View
    - displayCanceledList() : void
    - navigateBackToOrganizerMenu() : void
}

class ViewSignedListFragment {
    -- Attributes --
    - signedUpListView : ListView
    - backButton : Button
    - eventId : String
    - waitingList : WaitingList

    -- Methods --
    + newInstance(eventId: String) : ViewSignedListFragment
    + onCreate(savedInstanceState: Bundle) : void
    + onCreateView(inflater: LayoutInflater, container: ViewGroup, savedInstanceState: Bundle) : View
    - displaySignedUpList() : void
    - navigateBackToOrganizerMenu() : void
}

class ViewWaitingListFragment {
    -- Attributes --
    - waitingListView : ListView
    - backButton : Button
    - eventId : String
    - waitingList : WaitingList

    -- Methods --
    + newInstance(eventId: String) : ViewWaitingListFragment
    + onCreate(savedInstanceState: Bundle) : void
    + onCreateView(inflater: LayoutInflater, container: ViewGroup, savedInstanceState: Bundle) : View
    - displayWaitingList() : void
    - navigateBackToOrganizerMenu() : void
}

class WaitingList {
    -- Attributes --
    - eventId : String
    - maxParticipants : int
    - waitingParticipantIds : List<String>
    - acceptedParticipantIds : List<String>
    - signedUpParticipantIds : List<String>
    - canceledParticipantIds : List<String>

    -- Methods --
    + WaitingList()
    + WaitingList(eventId: String)
    + getEventId() : String
    + setEventId(eventId: String) : void
    + getMaxParticipants() : int
    + setMaxParticipants(maxParticipants: int) : void
    + getWaitingParticipantIds() : List<String>
    + setWaitingParticipantIds(waitingParticipantIds: List<String>) : void
    + getAcceptedParticipantIds() : List<String>
    + setAcceptedParticipantIds(acceptedParticipantIds: List<String>) : void
    + getSignedUpParticipantIds() : List<String>
    + setSignedUpParticipantIds(signedUpParticipantIds: List<String>) : void
    + getCanceledParticipantIds() : List<String>
    + setCanceledParticipantIds(canceledParticipantIds: List<String>) : void
    + addParticipantToWaitingList(participantId: String) : boolean
    + sampleParticipants(sampleSize: int) : List<String>
    + participantSignsUp(participantId: String) : String
    + cancelParticipation(participantId: String) : boolean
    + drawReplacement(replacementSize: int) : List<String>
    + loadFromFirebase() : Task<DocumentSnapshot>
    + updateToFirebase() : Task<Void>
}

class Facility {
    -- Attributes --
    - facilityID : String
    - name : String
    - address : String
    - organizer : String
    - eventName : String
    - allEvents : List<String>
    - db : FirebaseFirestore
    - facilitiesRef : CollectionReference
    - testing : boolean

    -- Methods --
    + Facility()
    + Facility(name: String, address: String, description: String, organizer: String)
    + getName() : String
    + setName(name: String) : void
    + getAddress() : String
    + setAddress(address: String) : void
    + getOrganizer() : String
    + setOrganizer(organizer: String) : void
    + getFacilityID() : String
    + setFacilityID(facilityID: String) : void
    + getEvent() : String
    + setEvent(eventName: String) : void
    + setAllEvents(allEvents: List<String>) : void
    + getAllEvents() : List<String>
    + addAllEventsItem(eventID: String) : void
    + removeAllEventsItem(eventID: String) : void
    + saveFacilityProfile() : Task<Void>
    + deleteFacility() : void
    + associateEvent(eventID: String, genEvent: boolean) : void
    + hasEvent(eventName: String) : boolean
    + updateEventInFacility(eventName: String) : void
    + createFacilityWithEvent(eventName: String) : void
    + getNewFacilityID() : String
}



class Location {
    -- Attributes --
    - address : String
    - latitude : int
    - longitude : int
}

class MainActivity {
    -- Attributes --
    - REQUEST_WRITE_STORAGE : int
    - qrGenerator : QRcodeGenerator
    - qrCodeImageView : ImageView
    - navController : NavController
    - bottomNavigationView : BottomNavigationView
    - drawerLayout : DrawerLayout
    - navigationView : NavigationView
    - drawerToggle : ActionBarDrawerToggle
    - TAG : String
    - eventIdFromQR : String
    - isLoggedIn : boolean

    -- Methods --
    + onCreate(savedInstanceState: Bundle) : void
    + onNavigationItemSelected(item: MenuItem) : boolean
    + onBackPressed() : void
    + onNewIntent(intent: Intent) : void
    - handleIntent(intent: Intent) : void
    - extractEventIdFromUrl(url: String) : String
    - showLoginFragment(eventIdFromQR: String) : void
    + onLoginSuccess() : void
    - openEventViewFragment(eventID: String) : void
}


class DataGenerator {
    -- Attributes --
    - userList : List<User>
    - facilityList : List<Facility>
    - eventList : List<Event>
    - db : FirebaseFirestore

    -- Methods --
    + DataGenerator()
    + generateAndUploadData() : void
    - generateUsers() : void
    - generateFacilities() : void
    - generateEvents() : void
    - uploadData() : void
}



class Date {
    -- Attributes --
    - day : int
    - month : int
    - year : int
}

class User {
    -- Attributes --
    - deviceId : String
    - username : String
    - email : String
    - phoneNumber : String
    - profilePictureUrl : String
    - defaultprofilepictureurl : String
    - location : String
    - address : String
    - adminLevel : boolean
    - facilityAssociated : boolean
    - notificationAsk : boolean
    - geolocationAsk : boolean
    - roles : List<String>

    -- Methods --
    + getDeviceID() : String
    + setDeviceID(deviceId: String) : void
    + getUsername() : String
    + setUsername(username: String) : void
    + getEmail() : String
    + setEmail(email: String) : void
    + getPhoneNumber() : String
    + setPhoneNumber(phoneNumber: String) : void
    + getProfilePictureUrl() : String
    + setProfilePictureUrl(profilePictureUrl: String) : void
    + getdefaultProfilePictureUrl() : String
    + setdefaultProfilePictureUrl(defaultprofilepictureurl: String) : void
    + getRoles() : List<String>
    + setRoles(roles: List<String>) : void
    + isFacilityAssociated() : boolean
    + setFacilityAssociated(facilityAssociated: boolean) : void
    + getAddress() : String
    + setAddress(address: String) : void
    + getLocation() : String
    + setLocation(location: String) : void
    + isGeolocationAsk() : boolean
    + setGeolocationAsk(geolocationAsk: boolean) : void
    + isNotificationAsk() : boolean
    + setNotificationAsk(notificationAsk: boolean) : void
    + hasRole(role: String) : boolean
    + addRole(role: String) : void
    + removeRole(role: String) : void
    + generateProfileBitmap(name: String) : Bitmap
    + defaultProfilePictureUrl(name: String) : Task<Void>
    + uploadDefaultImageToFirebaseStorage(imageBytes: byte[]) : Task<Void>
    + saveUserDataToFirestore() : Task<Void>
    + saveGeneratedImageUrl(imageURL: String) : Task<Void>
    + updateProfilePicture(newPictureUri: Uri) : void
    + deleteSelectedImageFromFirebase(imageUrl: String) : void
    + isDefaultURLMain() : boolean
    + setMainToDefault() : void

'    -- Inner Interfaces --
'    interface OnImageUploadComplete {
'        + onImageUploadComplete(imageURL: String) : void
'        + onImageUploadFailed(e: Exception) : void
'    }
'
'    interface OnImageRemovalComplete {
'        + onImageRemovalSuccess() : void
'        + onImageRemovalFailed(e: Exception) : void
'    }
'
'    interface OnProfilePictureGeneratedListener {
'        + onProfilePictureGenerated() : void
'        + onProfilePictureGenerationFailed(e: Exception) : void
'    }
'
'    interface OnUserIDGenerated {
'        + onUserIDGenerated(userID: String) : void
'    }
}

class UserManager {
    -- Attributes --
    - instance : UserManager
    - currentUser : User
    - userFacility : Facility
    - organizerEvents : List<Event>
    - userEvents : List<Event>
    - eventDatabase : List<Event>

    -- Methods --
    + getInstance() : UserManager
    + setCurrentUser(user: User) : void
    + findUserEvents() : void
    + findUserFacility() : void
    + findOrganizerEvents() : void
    + userHasFacility() : boolean
    + getCurrentUser() : User
    + getUserFacility() : Facility
    + getOrganizerEvents() : List<Event>
    + getUserEvents() : List<Event>
    + getUserId() : String
}
class TestFragment {
    -- Attributes --
    - TAG : String
    - PICK_IMAGE_REQUEST : int
    - btnGenerateData : Button
    - btnLoadData : Button
    - btnSelectImage : Button
    - btnUploadImage : Button
    - btnDelete : Button
    - imageView : ImageView
    - txtStatus : TextView
    - imageUri : Uri
    - db : FirebaseFirestore
    - storage : FirebaseStorage
    - sampleTable : SampleTable
    - francisTest : boolean

    -- Methods --
    + TestFragment()
    + onCreate(savedInstanceState: Bundle) : void
    + onCreateView(inflater: LayoutInflater, container: ViewGroup, savedInstanceState: Bundle) : View
    - generateAndSaveData() : void
    - loadDataFromFirebase() : void
    - openFileChooser() : void
    + onActivityResult(requestCode: int, resultCode: int, data: Intent) : void
    - uploadImage() : void
    - saveImageLinkToFirestore(imageUrl: String, usage: String, description: String) : void
    - deleteAllData() : void

'    -- Inner Class --
'    class ImageData {
'        -- Attributes --
'        - imageUrl : String
'        - usage : String
'        - description : String
'
'        -- Methods --
'        + ImageData()
'        + ImageData(imageUrl: String, usage: String, description: String)
'        + getImageUrl() : String
'        + getUsage() : String
'        + getDescription() : String
'    }
}

class SampleTable {
    -- Attributes --
    + UserList : List<User>
    + FacilityList : List<Facility>
    + EventList : List<Event>
    - userUpdateCount : int
    - facilityUpdateCount : int

    -- Methods --
    + makeUserList() : void
    + makeFacilityList() : void
    + makeEventList() : void
    + saveDataToFirebase(onSuccess: Runnable, onFailure: OnFailureListener) : void
    - checkCompletion(pendingWrites: AtomicInteger, failures: AtomicInteger, onSuccess: Runnable, onFailure: OnFailureListener) : void
    + getUserList() : List<User>
    + getFacilityList() : List<Facility>
    + getEventList() : List<Event>
    + updateUser(updatedUser: User) : void
    + updateFacility(updatedFacility: Facility) : void
    + updateEvent(updatedEvent: Event) : void
    + getUserByUsername(username: String) : User
    + getFacilityByName(name: String) : Facility
    + getEventById(eventId: String) : Event
}

class FirebaseTestingActivity {
    -- Attributes --
    - TAG : String
    - PICK_IMAGE_REQUEST : int
    - btnGenerateData : Button
    - btnLoadData : Button
    - btnSelectImage : Button
    - btnUploadImage : Button
    - imageView : ImageView
    - txtStatus : TextView
    - imageUri : Uri
    - db : FirebaseFirestore
    - storage : FirebaseStorage
    - sampleTable : SampleTable

    -- Methods --
    + onCreate(savedInstanceState: Bundle) : void
    - generateAndSaveData() : void
    - loadDataFromFirebase() : void
    - openFileChooser() : void
    + onActivityResult(requestCode: int, resultCode: int, data: Intent) : void
    - uploadImage() : void
    - saveImageLinkToFirestore(imageUrl: String, usage: String, description: String) : void

'    -- Inner Class --
'    class ImageData {
'        -- Attributes --
'        - imageUrl : String
'        - usage : String
'        - description : String
'
'        -- Methods --
'        + ImageData()
'        + ImageData(imageUrl: String, usage: String, description: String)
'        + getImageUrl() : String
'        + getUsage() : String
'        + getDescription() : String
'    }
}


class ImageData {
    -- Attributes --
    - imageUrl : String
    - usage : String
    - description : String

    -- Methods --
    + ImageData()
    + ImageData(imageUrl: String, usage: String, description: String)
    + getImageUrl() : String
    + getUsage() : String
    + getDescription() : String
}

class FirebaseTesting {
    -- Attributes --
    - TAG : String
    - db : FirebaseFirestore
    - storage : FirebaseStorage

    -- Methods --
    + FirebaseTesting()
    + uploadImage(localImagePath: String, usageLocation: String, description: String) : void
    + loadImages() : void
    + testFirebaseOperations() : void
    + loadUsersFromFirebase() : void
    + loadFacilitiesFromFirebase() : void
    + loadEventsFromFirebase() : void
}

' Relationships with correct multiplicity and UML notations
FirebaseTestingActivity *-- "1" SampleTable : contains
SampleTable o-- "*" User : contains
SampleTable o-- "*" Facility : contains
SampleTable o-- "*" Event : contains
FirebaseTestingActivity --> "1" FirebaseFirestore : uses
FirebaseTestingActivity --> "1" FirebaseStorage : uses
TestFragment --> "1" FirebaseFirestore : uses
TestFragment --> "1" FirebaseStorage : uses
TestFragment *-- "1" SampleTable : contains
FirebaseTesting --> "1" FirebaseFirestore : uses
FirebaseTesting --> "1" FirebaseStorage : uses
FirebaseTesting --> "1" SampleTable : uses
FirebaseTestingActivity +-- ImageData
TestFragment +-- ImageData

class NotificationFragment {
    - ARG_INTEGER : String
    - receivedInteger : int
    + newInstance() : NotificationFragment
    + onCreate(savedInstanceState: Bundle) : void
    + onCreateView(inflater: LayoutInflater, container: ViewGroup, savedInstanceState: Bundle) : View
}

class NotificationViewModel {
    - notificationId : String
    - eventName : String
    - eventDate : String
    - eventLocation : String
    + getNotificationId() : String
    + getEventName() : String
    + getEventDate() : String
    + getEventLocation() : String
    + setNotificationId(notificationId: String) : void
    + setEventName(eventName: String) : void
    + setEventDate(eventDate: String) : void
    + setEventLocation(eventLocation: String) : void
    + fetchEventDetails() : void
    + sendNotification() : void
}


class CameraFragment {
    - REQUEST_CODE_SCAN : int
    + onCreateView(inflater: LayoutInflater, container: ViewGroup, savedInstanceState: Bundle) : View
    + onActivityResult(requestCode: int, resultCode: int, data: Intent) : void
    - extractEventIdFromQR(scannedData: String) : String
    + navigateToScannedFragment(eventId: String) : void
}

class QRCodeEventGenerate {
    - qrCodeGenerator : QRcodeGenerator
    + onCreateView(inflater: LayoutInflater, container: ViewGroup, savedInstanceState: Bundle) : View
    - generateHash(input: String) : String
}

class QRcodeGenerator {
    - context : Context
    + QRcodeGenerator(context: Context)
    + generateQRCode(content: String) : Bitmap
    + saveQRCode(bitmap: Bitmap, eventID: String) : void
}

class ScannedFragment {
    - ARG_EVENT_ID : String
    - eventId : String
    - scanView : TextView
    - scannerOpenButton : Button
    + newInstance(scannedData: String) : ScannedFragment
    + onCreate(savedInstanceState: Bundle) : void
    + onCreateView(inflater: LayoutInflater, container: ViewGroup, savedInstanceState: Bundle) : View
}

class ProfileFragment {
    - receivedInteger : int
    + newInstance() : ProfileFragment
    + onCreate(savedInstanceState: Bundle) : void
    + onCreateView(inflater: LayoutInflater, container: ViewGroup, savedInstanceState: Bundle) : View
}

class ProfileEntrantFragment {
    - profileManager : EntrantProfileManager
    - currentProfile : EntrantProfile
    - currentUser : User
    - isNewUser : boolean
    - eventIDFromQR : String
    - deviceId : String
    - selectedImageUri : Uri
    - profileTitle : TextView
    - editName : EditText
    - editEmail : EditText
    - editPhone : EditText
    - notificationsSwitch : Switch
    - saveButton : Button
    - backButton : Button
    - editButton : Button
    - uploadButton : Button
    - userImage : ImageView
    + newInstance(isNewUser: boolean, eventId: String, deviceId: String) : ProfileEntrantFragment
    + onCreate(savedInstanceState: Bundle) : void
    + onCreateView(inflater: LayoutInflater, container: ViewGroup, savedInstanceState: Bundle) : View
    - loadUserProfile() : void
    - onProfileLoaded(profile: EntrantProfile) : void
    - saveUserProfile() : void
    - toggleEditMode() : void
    - setEditMode(enable: boolean) : void
    - getDeviceID() : String
    - uploadPhoto() : void
    - removeImage() : void
    - goToHome() : void
}

class EntrantProfileManager {
    - db : FirebaseFirestore
    + createOrUpdateProfile(deviceID: String, profile: EntrantProfile) : void
    + getProfile(deviceID: String, callback: ProfileLoadCallback) : void


}

class EntrantProfile {
    - name : String
    - email : String
    - phoneNumber : String
    - notificationsEnabled : boolean
    + EntrantProfile()
    + EntrantProfile(name: String, email: String, phoneNumber: String)
    + getName() : String
    + setName(name: String) : void
    + getEmail() : String
    + setEmail(email: String) : void
    + getPhoneNumber() : String
    + setPhoneNumber(phoneNumber: String) : void
    + isNotificationsEnabled() : boolean
    + setNotificationsEnabled(enabled: boolean) : void
    + toString() : String
}

class LoginFragment {
    - deviceIdText : TextView
    - welcomeText : TextView
    - nav : BottomNavigationView
    - isLoggedIn : boolean
    - eventIdFromQR : String
    + setEventId(eventId: String) : void
    + onCreate(savedInstanceState: Bundle) : void
    + onCreateView(inflater: LayoutInflater, container: ViewGroup, savedInstanceState: Bundle) : View
}

class HomeFragment {
    - someInteger : int
    - userId : String
    + newInstance(userId: String) : HomeFragment
    + onCreateView(inflater: LayoutInflater, container: ViewGroup, savedInstanceState: Bundle) : View
}

class HomeViewModel {
    - mText : MutableLiveData<String>
    + HomeViewModel()
    + getText() : LiveData<String>
}

class EventViewFragment {
    - eventId : String
    - deviceId : String
    - userId : String
    - event : Event
    - eventPosterImage : ImageView
    - eventTitleText : TextView
    - eventDescriptionText : TextView
    - buttonContainer : LinearLayout
    + newInstance(eventID: String, deviceID: String) : EventViewFragment
    + onCreateView(inflater: LayoutInflater, container: ViewGroup, savedInstanceState: Bundle) : View
    - displayEventDetails(event: Event) : void
    - configureButtons(selectedEvent: Event, selectedUserId: String) : void
    - addButton(text: String, listener: View.OnClickListener) : void
    - updateEventInFirestore(event: Event) : void
    - goBackToEventFragment() : void
}

class EventViewAdapter {
    - context : Context
    - eventList : List<Event>
    - userId : String
    - test : boolean
    + EventViewAdapter(context: Context, eventList: ArrayList<Event>, test: boolean)
    + getView(position: int, convertView: View, parent: ViewGroup) : View
}

class EventFragment {
    - addFacilityButton : Button
    - backButton : Button
    - currentUserId : String
    - eventList : ArrayList<Event>
    - testing : boolean
    - eventSwitch : Switch
    - eventListView : ListView
    - db : FirebaseFirestore
    - currentUser : User
    - eventAdapter : EventViewAdapter
    - userManager : UserManager
    + newInstance() : EventFragment
    + onCreateView(inflater: LayoutInflater, container: ViewGroup, savedInstanceState: Bundle) : View
    - getUserData() : User
    - updateEventList(showUserEvents: boolean) : void
    - promptCreateFacility() : void
    - navigateToEventCreate() : void
    - navigateToFacilityCreation() : void
    - findEventsByParticipantDeviceId(deviceID: String) : List<Event>
    - findEventsByOrganizerDeviceId(deviceID: String) : List<Event>
    - getFiveRandomEvents() : Task<List<Event>>
}

class Event {
    - eventId : String
    - eventTitle : String
    - description : String
    - imageUrl : String
    - timestamp : long
    - address : String
    - location : String
    - maxParticipants : int
    - waitingParticipantIds : List<String>
    - acceptedParticipantIds : List<String>
    - canceledParticipantIds : List<String>
    - signedUpParticipantIds : List<String>
    - enrolledParticipantIds : List<String>
    - declinedParticipantIds : List<String>
    - waitingList : WaitingList
    - organizerId : String
    - db : FirebaseFirestore
    - storage : FirebaseStorage
    + Event()
    + Event(eventId: String, eventTitle: String, description: String, imageUrl: String, timestamp: long, locationstr: String, maxParticipants: int, organizerId: String)
    + getEventId() : String
    + setEventId(eventId: String) : void
    + getEventTitle() : String
    + setEventTitle(eventTitle: String) : void
    + getDescription() : String
    + setDescription(description: String) : void
    + getImageUrl() : String
    + setImageUrl(imageUrl: String) : void
    + getTimestamp() : long
    + setTimestamp(timestamp: long) : void
    + getAddress() : String
    + setAddress(address: String) : void
    + getMaxParticipants() : int
    + setMaxParticipants(maxParticipants: int) : void
    + getWaitingList() : WaitingList
    + getOrganizerId() : String
    + setOrganizerId(organizerId: String) : void
    + getLocation() : String
    + setLocation(location: String) : void
    + getAcceptedParticipantIds() : List<String>
    + addAcceptedParticipantId(participantId: String) : void
    + getCanceledParticipantIds() : List<String>
    + addCanceledParticipantIds(participantId: String) : void
    + getSignedUpParticipantIds() : List<String>
    + addSignedUpParticipantIds(participantId: String) : void
    + getWaitingParticipantIds() : List<String>
    + addWaitingParticipantIds(participantId: String) : void
    + removeWaitingParticipantId(participantId: String) : void
    + acceptParticipant(entrantId: String) : void
    + cancelParticipant(entrantId: String) : void
    + signUpParticipant(entrantId: String) : void
    + addParticipant(entrantId: String) : void
    + removeParticipant(entrantId: String) : void
    + createEventPosterUrl() : String
    + saveEventDataToFirestore() : Task<Void>
    + updateEventData(...) : Task<Void>
    + uploadEventPosterToFirebase(picture: String) : void
    + updateEventPosterToFirebase(newPoster: String) : void
    + getNewEventID() : String
    + findEventById(eventId: String, onSuccessListener: OnSuccessListener<Event>, onFailureListener: OnFailureListener) : void
    + addDeclinedParticipantId(userId: String) : void
    + getDeclinedParticipantIds() : List<String>
}

class EventCreateFragment {
    - editTextTitle : EditText
    - editTextDescription : EditText
    - editTextImageUrl : EditText
    - editTextLocation : EditText
    - editMaxParticipants : EditText
    - editWaitingListLimit : EditText
    - createEventButton : Button
    - backButton : Button
    - db : FirebaseFirestore
    - roleAssigned : boolean
    - testingFlag : boolean
    + EventCreateFragment()
    + newInstance(testing: boolean) : EventCreateFragment
    + onCreate(savedInstanceState: Bundle) : void
    + onCreateView(inflater: LayoutInflater, container: ViewGroup, savedInstanceState: Bundle) : View
    - createEvent() : void
    - clearEventForm() : void
}
class AdminFragment {
    -- Attributes --
    - viewUsersButton : Button
    - viewEventsButton : Button
    - viewFacilitiesButton : Button
    - viewImagesButton : Button

    -- Methods --
    + onCreateView(inflater: LayoutInflater, container: ViewGroup, savedInstanceState: Bundle) : View
    - replaceFragment(fragment: Fragment) : void
}

class ViewUsersFragment {
    -- Attributes --
    - db : FirebaseFirestore
    - usersListView : ListView
    - userAdapter : UserViewAdapter
    - userList : ArrayList<User>
    - addUser : Button
    - adminGoBack : Button

    -- Methods --
    + onCreateView(inflater: LayoutInflater, container: ViewGroup, savedInstanceState: Bundle) : View
    - openNewUserFragment() : void
    - openUserDetailsFragment(selectedUser: User) : void
    - loadUsersFromFirestore() : void
}

class UserViewAdapter {
    -- Attributes --
    - context : Context
    - userList : List<User>

    -- Methods --
    + UserViewAdapter(context: Context, userList: ArrayList<User>)
    + getView(position: int, convertView: View, parent: ViewGroup) : View
}

class EditUserFragment {
    -- Attributes --
    - usernameEditText : EditText
    - deviceIdEditText : EditText
    - emailEditText : EditText
    - phoneNumberEditText : EditText
    - profilePictureUrlEditText : EditText
    - locationEditText : EditText
    - dateJoinedEditText : EditText
    - saveButton : Button
    - deleteButton : Button
    - cancelButton : Button
    - notificationSwitch : Switch
    - geolocationSwitch : Switch
    - entrantSwitch : Switch
    - organizerSwitch : Switch
    - adminSwitch : Switch
    - db : FirebaseFirestore
    - documentId : String
    - isNewUser : boolean

    -- Methods --
    + onCreateView(inflater: LayoutInflater, container: ViewGroup, savedInstanceState: Bundle) : View
    - updateUser(documentId: String) : void
    - deleteUser(documentId: String) : void
    - loadUserData(documentId: String) : void
    - addUserToFirestore() : void
}

class ViewImagesFragment {
    -- Attributes --
    - imagesListView : ListView
    - imageAdapter : ImageAdapter
    - imageList : List<ImageClass>
    - adminGoBack : Button

    -- Methods --
    + onCreateView(inflater: LayoutInflater, container: ViewGroup, savedInstanceState: Bundle) : View
    - loadImagesFromFirebase() : void
    - openImageDetailsFragment(image: ImageClass) : void
}

class ImageClass {
    -- Attributes --
    - URL : String
    - image : Image

    -- Methods --
    // No public methods defined in the file
}

class ImageAdapter {
    -- Attributes --
    - context : Context
    - imageList : List<ImageClass>

    -- Methods --
    + ImageAdapter(context: Context, imageList: List<ImageClass>)
    + getView(position: int, convertView: View, parent: ViewGroup) : View
}

class EditImageFragment {
    -- Attributes --
    // No attributes defined in the file

    -- Methods --
    // No public methods defined in the file
}

class ViewFacilitiesFragment {
    -- Attributes --
    - adminGoBack : Button
    - db : FirebaseFirestore
    - facilitiesListView : ListView
    - facilityAdapter : FacilityViewAdapter
    - facilityList : ArrayList<Facility>
    - addUFacility : Button

    -- Methods --
    + onCreateView(inflater: LayoutInflater, container: ViewGroup, savedInstanceState: Bundle) : View
    - loadFacilitiesFromFirestore() : void
    - openFacilityDetailsFragment(selectedFacility: Facility) : void
}

class FacilityViewAdapter {
    -- Attributes --
    - context : Context
    - facilityList : List<Facility>

    -- Methods --
    + FacilityViewAdapter(context: Context, facilityList: ArrayList<Facility>)
    + getView(position: int, convertView: View, parent: ViewGroup) : View
}

class EditEventFragment {
    -- Attributes --
    - listSelectorSpinner : Spinner
    - eventTitleEditText : EditText
    - eventDescriptionEditText : EditText
    - maxParticipantsEditText : EditText
    - eventLocationEditText : EditText
    - organiserIDEditText : EditText
    - participantEditText : EditText
    - saveButton : Button
    - cancelButton : Button
    - addParticipantButton : Button
    - removeParticipantButton : Button
    - removeEventButton : Button
    - participantsListView : ListView
    - selectedEvent : Event
    - participantsAdapter : ArrayAdapter<String>
    - db : FirebaseFirestore
    - selectedList : List<String>
    - updatedWaitingList : List<String>
    - updatedAcceptedList : List<String>
    - updatedCanceledList : List<String>
    - updatedSignedUpList : List<String>

    -- Methods --
    + EditEventFragment(selectedEvent: Event)
    + onCreateView(inflater: LayoutInflater, container: ViewGroup, savedInstanceState: Bundle) : View
    - populateEventDetails() : void
    - saveEvent() : void
    - goBackToViewEvents() : void
    - updateParticipantsList(position: int) : void
    - addParticipant() : void
    - removeParticipant() : void
    - removeEvent() : void
}

class EditEventFragment {
    -- Attributes --
    - listSelectorSpinner : Spinner
    - eventTitleEditText : EditText
    - eventDescriptionEditText : EditText
    - maxParticipantsEditText : EditText
    - eventLocationEditText : EditText
    - organiserIDEditText : EditText
    - participantEditText : EditText
    - saveButton : Button
    - cancelButton : Button
    - addParticipantButton : Button
    - removeParticipantButton : Button
    - removeEventButton : Button
    - participantsListView : ListView
    - selectedEvent : Event
    - participantsAdapter : ArrayAdapter<String>
    - db : FirebaseFirestore
    - selectedList : List<String>
    - updatedWaitingList : List<String>
    - updatedAcceptedList : List<String>
    - updatedCanceledList : List<String>
    - updatedSignedUpList : List<String>

    -- Methods --
    + EditEventFragment(selectedEvent: Event)
    + onCreateView(inflater: LayoutInflater, container: ViewGroup, savedInstanceState: Bundle) : View
    - populateEventDetails() : void
    - saveEvent() : void
    - goBackToViewEvents() : void
    - updateParticipantsList(position: int) : void
    - addParticipant() : void
    - removeParticipant() : void
    - removeEvent() : void
}

class ViewEventsFragment {
    -- Attributes --
    - adminGoBack : Button
    - eventAdapter : EventViewAdapter
    - userManager : UserManager
    - eventList : ArrayList<Event>
    - testing : boolean
    - eventListView : ListView
    - addFacilityButton : Button
    - backButton : Button
    - db : FirebaseFirestore

    -- Methods --
    + onCreateView(inflater: LayoutInflater, container: ViewGroup, savedInstanceState: Bundle) : View
    - loadEventsFromFirebase() : void
    - openEventDetailPage(selectedEvent: Event) : void
}

ViewEventsFragment --> "1" AdminFragment : navigates
ViewEventsFragment --> "1" EventViewAdapter : uses
ViewEventsFragment --> "1" EditEventFragment : navigates
ViewEventsFragment *-- "1..*" Event : contains
EditEventFragment *-- "1" Event : contains
EditEventFragment --> "1" ViewEventsFragment : navigates
ViewFacilitiesFragment --> "1" FacilityViewAdapter : uses
FacilityViewAdapter o-- "0..*" Facility : contains
ViewFacilitiesFragment --> "1" AdminFragment : navigates
ViewFacilitiesFragment --> "1" FacilityViewAdapter : uses
ViewFacilitiesFragment --> "1" EditFacilityFragment : uses
ViewFacilitiesFragment *-- "1..*" Facility : contains
ViewImagesFragment --> "1" EditImageFragment : navigates
ImageAdapter *-- "0..*" ImageClass : contains
ViewImagesFragment --> "1" ImageAdapter : uses
ViewImagesFragment *-- "1..*" ImageClass : contains
AdminFragment --> "1" ViewUsersFragment : navigates
ViewUsersFragment --> "1" AdminFragment : navigates
ViewUsersFragment --> "1" UserViewAdapter : uses
ViewUsersFragment --> "1" EditUserFragment : uses
ViewUsersFragment --> "1..*" User : uses
UserViewAdapter *-- "1..*" User : contains
EditUserFragment --> "1" User : uses

EventCreateFragment *-- "1" Event : creates
EventCreateFragment --> "1" FirebaseFirestore : uses
EventCreateFragment --> "1" HomeFragment : navigates
Event *-- "0..*" WaitingList : contains
EventFragment --> "1" EventCreateFragment : navigates
EventFragment --> "1" EventViewFragment : navigates
EventFragment --> "1" OrganizerMenuFragment : navigates
EventFragment --> "1" HomeFragment : navigates
EventFragment *-- "1..*" Event : contains
EventFragment --> "1" User : uses
EventFragment --> "1" EventViewAdapter : uses
ViewEventsFragment --> "1" EventViewAdapter : uses
EventViewAdapter *-- "1..*" Event : contains
EventViewFragment --> "1" Event : uses
EventViewFragment --> "1" EventFragment : navigates

HomeFragment --> "1" EventCreateFragment : navigates
HomeFragment --> "1" EventFragment : navigates
HomeFragment --> "1" NotificationFragment : navigates
HomeFragment --> "1" ProfileEntrantFragment : navigates
HomeViewModel --> LiveData : provides

ProfileEntrantFragment *-- "1" EntrantProfileManager : manages
ProfileEntrantFragment *-- "1" EntrantProfile : contains
ProfileEntrantFragment --> "1" User : uses
ProfileEntrantFragment --> "1" HomeFragment : navigates
ProfileEntrantFragment --> "1" EventViewFragment : navigates

EntrantProfileManager --> EntrantProfile : manages
EntrantProfileManager --> FirebaseFirestore : uses
EntrantProfileManager o-- ProfileLoadCallback : callback

ProfileFragment --> "1" HomeFragment : navigates
ProfileFragment --> "1" NotificationFragment : navigates

LoginFragment --> "1" ProfileEntrantFragment : navigates
LoginFragment --> "1" HomeFragment : navigates
LoginFragment --> "1" EventViewFragment : navigates
LoginFragment --> "1" FirestoreAccess : uses

NotificationFragment --> "1" ProfileFragment : navigates
NotificationFragment --> "1" HomeFragment : navigates
CameraFragment --> "1" ScannedFragment : navigates
CameraFragment --> "1" IntentIntegrator : uses
QRCodeEventGenerate --> "1" QRcodeGenerator : uses
QRcodeGenerator --> Bitmap : generates
QRcodeGenerator --> Context : uses
ScannedFragment --> "1" CameraFragment : navigates
UserManager *-- "1" User : manages
UserManager --> "1" FirestoreAccess : uses
UserManager *-- "1" Facility : manages
UserManager *-- "1..*" Event : manages
DataGenerator *-- "1..*" User : generates
DataGenerator *-- "1..*" Facility : generates
DataGenerator *-- "1..*" Event : generates
DataGenerator --> "1" FirebaseFirestore : uses
Facility --> FirebaseFirestore : uses
Facility --> CollectionReference : manages
Facility *-- "1..*" Event : associates
MainActivity --> "1" HomeFragment : manages
MainActivity --> "1" ProfileFragment : manages
MainActivity --> "1" EventFragment : manages
MainActivity --> "1" TestFragment : manages
MainActivity --> "1" EventCreateFragment : manages
MainActivity --> "1" LoginFragment : manages
MainActivity --> "1" NotificationFragment : manages
MainActivity --> "1" ViewWaitingListFragment : manages
MainActivity --> "1" ViewSignedListFragment : manages
MainActivity --> "1" ViewCanceledListFragment : manages
MainActivity --> "1" ViewAcceptedListFragment : manages
MainActivity --> "1" OrganizerMenuFragment : manages
MainActivity --> "1" ScannedFragment : manages
MainActivity --> "1" CameraFragment : manages
MainActivity --> "1" QRCodeEventGenerate : manages
MainActivity --> "1" AdminFragment : manages
MainActivity --> "1" ProfileEntrantFragment : manages
MainActivity --> QRcodeGenerator : uses
WaitingList <-- ViewAcceptedListFragment : uses
WaitingList <-- ViewCanceledListFragment : uses
WaitingList <-- ViewSignedListFragment : uses
WaitingList <-- ViewWaitingListFragment : uses
ViewWaitingListFragment --> OrganizerMenuFragment : navigates
ViewWaitingListFragment --> WaitingList : uses
ViewSignedListFragment --> OrganizerMenuFragment : navigates
ViewSignedListFragment --> WaitingList : uses
ViewCanceledListFragment --> OrganizerMenuFragment : navigates
ViewCanceledListFragment --> WaitingList : uses
ViewAcceptedListFragment --> OrganizerMenuFragment : navigates
ViewAcceptedListFragment --> WaitingList : uses
OrganizerMenuFragment --> EventFragment : navigates
OrganizerMenuFragment --> ViewWaitingListFragment : navigates
OrganizerMenuFragment --> ViewSignedListFragment : navigates
OrganizerMenuFragment --> ViewCanceledListFragment : navigates
OrganizerMenuFragment --> ViewAcceptedListFragment : navigates
OrganizerMenuFragment --> WaitingList : contains
OrganizerMenuFragment --> QRcodeGenerator : uses
@enduml
