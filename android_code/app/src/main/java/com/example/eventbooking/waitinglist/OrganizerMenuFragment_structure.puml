@startuml

/' diagram meta data start
config=StructureConfiguration;
{
  "projectClassification": {
    "searchMode": "OpenProject", // OpenProject, AllProjects
    "includedProjects": "",
    "pathEndKeywords": "*.impl",
    "isClientPath": "",
    "isClientName": "",
    "isTestPath": "",
    "isTestName": "",
    "isMappingPath": "",
    "isMappingName": "",
    "isDataAccessPath": "",
    "isDataAccessName": "",
    "isDataStructurePath": "",
    "isDataStructureName": "",
    "isInterfaceStructuresPath": "",
    "isInterfaceStructuresName": "",
    "isEntryPointPath": "",
    "isEntryPointName": "",
    "treatFinalFieldsAsMandatory": false
  },
  "graphRestriction": {
    "classPackageExcludeFilter": "",
    "classPackageIncludeFilter": "",
    "classNameExcludeFilter": "",
    "classNameIncludeFilter": "",
    "methodNameExcludeFilter": "",
    "methodNameIncludeFilter": "",
    "removeByInheritance": "", // inheritance/annotation based filtering is done in a second step
    "removeByAnnotation": "",
    "removeByClassPackage": "", // cleanup the graph after inheritance/annotation based filtering is done
    "removeByClassName": "",
    "cutMappings": false,
    "cutEnum": true,
    "cutTests": true,
    "cutClient": true,
    "cutDataAccess": false,
    "cutInterfaceStructures": false,
    "cutDataStructures": false,
    "cutGetterAndSetter": true,
    "cutConstructors": true
  },
  "graphTraversal": {
    "forwardDepth": 6,
    "backwardDepth": 6,
    "classPackageExcludeFilter": "",
    "classPackageIncludeFilter": "",
    "classNameExcludeFilter": "",
    "classNameIncludeFilter": "",
    "methodNameExcludeFilter": "",
    "methodNameIncludeFilter": "",
    "hideMappings": false,
    "hideDataStructures": false,
    "hidePrivateMethods": true,
    "hideInterfaceCalls": true, // indirection: implementation -> interface (is hidden) -> implementation
    "onlyShowApplicationEntryPoints": false, // root node is included
    "useMethodCallsForStructureDiagram": "ForwardOnly" // ForwardOnly, BothDirections, No
  },
  "details": {
    "aggregation": "GroupByClass", // ByClass, GroupByClass, None
    "showClassGenericTypes": true,
    "showMethods": true,
    "showMethodParameterNames": true,
    "showMethodParameterTypes": true,
    "showMethodReturnType": true,
    "showPackageLevels": 2,
    "showDetailedClassStructure": true
  },
  "rootClass": "com.example.eventbooking.waitinglist.OrganizerMenuFragment",
  "extensionCallbackMethod": "" // qualified.class.name#methodName - signature: public static String method(String)
}
diagram meta data end '/



digraph g {
    rankdir="TB"
    splines=polyline
    

'nodes 
subgraph cluster_1322970774 { 
   	label=example
	labeljust=l
	fillcolor="#ececec"
	style=filled
   
   subgraph cluster_92572291 { 
   	label=eventbooking
	labeljust=l
	fillcolor="#d8d8d8"
	style=filled
   
   Event1271688147[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)Event</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >-   acceptedParticipantIds: List&lt;String&gt; [0..*]</TD></TR>
<TR><TD ALIGN="LEFT" >-   address: String [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   canceledParticipantIds: List&lt;String&gt; [0..*]</TD></TR>
<TR><TD ALIGN="LEFT" >-   db: FirebaseFirestore [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   declinedParticipantIds: List&lt;String&gt; [0..*]</TD></TR>
<TR><TD ALIGN="LEFT" >-   defaultEventPosterURL: String [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   description: String [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   enrolledParticipantIds: List&lt;String&gt; [0..*]</TD></TR>
<TR><TD ALIGN="LEFT" >-   eventId: String [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   eventPosterURL: String [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   eventTitle: String [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   geolocationRequired: boolean [1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   imageUrl: String [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   location: String [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   maxParticipants: int [1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   organizerId: String [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   qrcodehash: String [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   signedUpParticipantIds: List&lt;String&gt; [0..*]</TD></TR>
<TR><TD ALIGN="LEFT" >-   storage: FirebaseStorage [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   timestamp: long [1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   waitingList: WaitingList [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   waitingparticipantIds: List&lt;String&gt; [0..*]</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >+ acceptParticipant(entrantId: String)</TD></TR>
<TR><TD ALIGN="LEFT" >+ addAcceptedParticipantId(participantId: String)</TD></TR>
<TR><TD ALIGN="LEFT" >+ addCanceledParticipantIds(participantId: String)</TD></TR>
<TR><TD ALIGN="LEFT" >+ addDeclinedParticipantId(userId: String)</TD></TR>
<TR><TD ALIGN="LEFT" >+ addParticipant(entrantId: String)</TD></TR>
<TR><TD ALIGN="LEFT" >+ addSignedUpParticipantIds(participantId: String)</TD></TR>
<TR><TD ALIGN="LEFT" >+ addWaitingParticipantIds(participantId: String)</TD></TR>
<TR><TD ALIGN="LEFT" >+ cancelParticipant(entrantId: String)</TD></TR>
<TR><TD ALIGN="LEFT" >+ createEventPosterUrl(): String</TD></TR>
<TR><TD ALIGN="LEFT" >+ deleteSelectedPosterFromFirebase(posterUrl: String): Task&lt;Void&gt;</TD></TR>
<TR><TD ALIGN="LEFT" >+ describeContents(): int</TD></TR>
<TR><TD ALIGN="LEFT" >+ findEventById(eventId: String, onSuccessListener: OnSuccessListener&lt;Event&gt;, onFailureListener: OnFailureListener)</TD></TR>
<TR><TD ALIGN="LEFT" >+ generateDefaultPoster(eventTitle: String): Bitmap</TD></TR>
<TR><TD ALIGN="LEFT" >+ getAllEvents(onSuccess: OnSuccessListener&lt;List&lt;Event&gt;&gt;, onFailure: OnFailureListener)</TD></TR>
<TR><TD ALIGN="LEFT" >+ getNewEventQRHash()</TD></TR>
<TR><TD ALIGN="LEFT" >+ getOrganizerEvents(userId: String, onSuccess: OnSuccessListener&lt;List&lt;Event&gt;&gt;, onFailure: OnFailureListener)</TD></TR>
<TR><TD ALIGN="LEFT" >+ getUserEvents(userId: String, onSuccess: OnSuccessListener&lt;List&lt;Event&gt;&gt;, onFailure: OnFailureListener)</TD></TR>
<TR><TD ALIGN="LEFT" >- populateEventData(eventData: Map&lt;String, Object&gt;)</TD></TR>
<TR><TD ALIGN="LEFT" >+ removeParticipant(entrantId: String)</TD></TR>
<TR><TD ALIGN="LEFT" >+ removeWaitingParticipantId(participantId: String)</TD></TR>
<TR><TD ALIGN="LEFT" >+ saveEventDataToFirestore(): Task&lt;Void&gt;</TD></TR>
<TR><TD ALIGN="LEFT" >+ signUpParticipant(entrantId: String)</TD></TR>
<TR><TD ALIGN="LEFT" >+ updateEventData(newTitle: String, newDescription: String, newLocation: String, newMaxParticipants: int, newOrganizerId: String, newWaitingparticipantIds: List&lt;String&gt;, newAcceptedParticipantIds: List&lt;String&gt;, newCanceledParticipantIds: List&lt;String&gt;, newSignedUpParticipantIds: List&lt;String&gt;): Task&lt;Void&gt;</TD></TR>
<TR><TD ALIGN="LEFT" >+ updateEventPoster(newPosterUri: Uri)</TD></TR>
<TR><TD ALIGN="LEFT" >+ uploadCustomPoster(imageUri: Uri): Task&lt;Void&gt;</TD></TR>
<TR><TD ALIGN="LEFT" >+ uploadDefaultPoster(eventTitle: String): Task&lt;Void&gt;</TD></TR>
<TR><TD ALIGN="LEFT" >+ uploadPosterToFirebaseStorage(imageBytes: byte[], folderName: String): Task&lt;Void&gt;</TD></TR>
<TR><TD ALIGN="LEFT" >+ writeToParcel(dest: Parcel, flags: int)</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

MainActivity806146256[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)MainActivity</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >-   adminFragment: AdminFragment [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   bottomNavigationView: BottomNavigationView [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   cameraFragment: CameraFragment [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >+   currentGeoPoint: GeoPoint [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   drawerLayout: DrawerLayout [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   drawerToggle: ActionBarDrawerToggle [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   eventCodeGenerate: QRCodeEventGenerate [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   eventCreateFragment: EventCreateFragment [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   eventFragment: EventFragment [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   eventIdFromQR: String [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   homeFragment: HomeFragment [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   locationRequest: LocationRequest [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   loginFragment: LoginFragment [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   navController: NavController [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   navigationView: NavigationView [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   notificationFragment: NotificationFragment [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   organizerFragment: OragnizerEventFragment [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   organizerMenuFragment: OrganizerMenuFragment [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   profileEntrantFragment: ProfileEntrantFragment [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   profileFragment: ProfileFragment [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   qrCodeImageView: ImageView [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   qrGenerator: QRcodeGenerator [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   scannedFragment: ScannedFragment [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   testFragment: TestFragment [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   viewAcceptedListFragment: ViewAcceptedListFragment [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   viewCanceledListFragment: ViewCanceledListFragment [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   viewSignedListFragment: ViewSignedListFragment [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   viewWaitingListFragment: ViewWaitingListFragment [0..1]</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >+ createNotificationChannel(context: Context)</TD></TR>
<TR><TD ALIGN="LEFT" >- extractEventHashFromUrl(url: String): String</TD></TR>
<TR><TD ALIGN="LEFT" >- extractEventIdFromUrl(url: String): String</TD></TR>
<TR><TD ALIGN="LEFT" >- getCurrentLocation()</TD></TR>
<TR><TD ALIGN="LEFT" >- handleIntent(intent: Intent)</TD></TR>
<TR><TD ALIGN="LEFT" >+ hideNavigationUI()</TD></TR>
<TR><TD ALIGN="LEFT" >+ loadAdminSidePanel()</TD></TR>
<TR><TD ALIGN="LEFT" >+ loadStandardSidePanel()</TD></TR>
<TR><TD ALIGN="LEFT" >+ loadTestSidePanel()</TD></TR>
<TR><TD ALIGN="LEFT" >- moveToFragment(movingFragment: Fragment)</TD></TR>
<TR><TD ALIGN="LEFT" >+ onBackPressed()</TD></TR>
<TR><TD ALIGN="LEFT" ># onCreate(savedInstanceState: Bundle)</TD></TR>
<TR><TD ALIGN="LEFT" >+ onLoginSuccess()</TD></TR>
<TR><TD ALIGN="LEFT" >+ onNavigationItemSelected(item: MenuItem): boolean</TD></TR>
<TR><TD ALIGN="LEFT" ># onNewIntent(intent: Intent)</TD></TR>
<TR><TD ALIGN="LEFT" >+ onRequestPermissionsResult(requestCode: int, permissions: String[], grantResults: int[])</TD></TR>
<TR><TD ALIGN="LEFT" >- openEventViewFragment(eventID: String)</TD></TR>
<TR><TD ALIGN="LEFT" >- showLoginFragment(eventIdFromQR: String)</TD></TR>
<TR><TD ALIGN="LEFT" >+ showNavigationUI()</TD></TR>
<TR><TD ALIGN="LEFT" >- turnOnGPS()</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

MyNotificationManager92359351[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)MyNotificationManager</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >-   fb: FirebaseFirestore [0..1]</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >+ createNotification(notification: Notification): Task&lt;Void&gt;</TD></TR>
<TR><TD ALIGN="LEFT" >+ getUserNotifications(userId: String): Task&lt;QuerySnapshot&gt;</TD></TR>
<TR><TD ALIGN="LEFT" >+ notifyUserUnread(userId: String, context: Context)</TD></TR>
<TR><TD ALIGN="LEFT" >+ updateNotification(notification: Notification): Task&lt;Void&gt;</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

OrganizerMenuFragment1005856845[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)OrganizerMenuFragment</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >-   CancelNonSignUp: Button [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   QRImage: ImageView [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   backToButton: Button [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   currentEvent: Event [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   drawReplacementButton: Button [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   eventId: String [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   generateQRCode: Button [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   maxParticipant: int [1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   notificationManager: MyNotificationManager [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   pickImageLauncher: ActivityResultLauncher&lt;Intent&gt; [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   posterImageView: ImageView [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   qrCodeGenerator: QRcodeGenerator [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   removePosterButton: Button [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   replacementSize: int [1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   sampleAttendeesButton: Button [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   uploadPosterButton: Button [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   viewAcceptedListButton: Button [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   viewCanceledListButton: Button [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   viewSignedListButton: Button [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   viewWaitingListButton: Button [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   waitingList: WaitingList [0..1]</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >- cancelEntrant()</TD></TR>
<TR><TD ALIGN="LEFT" >- displayCurrentPoster()</TD></TR>
<TR><TD ALIGN="LEFT" >- drawReplacement(replacementSize: int)</TD></TR>
<TR><TD ALIGN="LEFT" >- generateAndDisplayQRCode(eventID: String)</TD></TR>
<TR><TD ALIGN="LEFT" >- launchImagePicker()</TD></TR>
<TR><TD ALIGN="LEFT" >- navigateBackToOrganizerPage()</TD></TR>
<TR><TD ALIGN="LEFT" >- navigateToCanceledList()</TD></TR>
<TR><TD ALIGN="LEFT" >- navigateToViewAcceptedList()</TD></TR>
<TR><TD ALIGN="LEFT" >- navigateToViewSignedList()</TD></TR>
<TR><TD ALIGN="LEFT" >- navigateToViewWaitingList()</TD></TR>
<TR><TD ALIGN="LEFT" >+ newInstance(eventId: String): OrganizerMenuFragment</TD></TR>
<TR><TD ALIGN="LEFT" >+ onCreate(savedInstanceState: Bundle)</TD></TR>
<TR><TD ALIGN="LEFT" >+ onCreateView(inflater: LayoutInflater, container: ViewGroup, savedInstanceState: Bundle): View</TD></TR>
<TR><TD ALIGN="LEFT" >- promptReplacementSize()</TD></TR>
<TR><TD ALIGN="LEFT" >- removePoster()</TD></TR>
<TR><TD ALIGN="LEFT" >- sampleAttendees()</TD></TR>
<TR><TD ALIGN="LEFT" >- uploadPoster(imageUri: Uri)</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

QRcodeGenerator1444445836[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)QRcodeGenerator</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >-   context: Context [0..1]</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >+ createQRCodeHash(textToHash: String): String</TD></TR>
<TR><TD ALIGN="LEFT" >+ generateAndSendBackQRCode(eventId: String): Bitmap</TD></TR>
<TR><TD ALIGN="LEFT" >+ generateQRCode(content: String): Bitmap</TD></TR>
<TR><TD ALIGN="LEFT" >+ saveQRCode(bitmap: Bitmap, eventID: String)</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

TestAdminFragment806146256[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)TestAdminFragment</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >+   EventList: List&lt;Event&gt; [0..*]</TD></TR>
<TR><TD ALIGN="LEFT" >-   loadingEventList: List&lt;Event&gt; [0..*]</TD></TR>
<TR><TD ALIGN="LEFT" >-   loadingFacilityList: List&lt;Facility&gt; [0..*]</TD></TR>
<TR><TD ALIGN="LEFT" >-   loadingUserList: List&lt;User&gt; [0..*]</TD></TR>
<TR><TD ALIGN="LEFT" >+   permissionRule: GrantPermissionRule [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   scenario: ActivityScenario&lt;MainActivity&gt; [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   user: User [0..1]</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >+ disableAnimations()</TD></TR>
<TR><TD ALIGN="LEFT" >- initalizeUserAndEvents()</TD></TR>
<TR><TD ALIGN="LEFT" >+ testNavigateToEventDelete()</TD></TR>
<TR><TD ALIGN="LEFT" >+ testNavigateToEventEditView()</TD></TR>
<TR><TD ALIGN="LEFT" >+ testNavigateToFacilityDelete()</TD></TR>
<TR><TD ALIGN="LEFT" >+ testNavigateToImageDelete()</TD></TR>
<TR><TD ALIGN="LEFT" >+ testNavigateToUserDelete()</TD></TR>
<TR><TD ALIGN="LEFT" >+ testNavigateToUserEditView()</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

TestHomeFragment806146256[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)TestHomeFragment</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >+   EventList: List&lt;Event&gt; [0..*]</TD></TR>
<TR><TD ALIGN="LEFT" >-   loadingEventList: List&lt;Event&gt; [0..*]</TD></TR>
<TR><TD ALIGN="LEFT" >-   loadingFacilityList: List&lt;Facility&gt; [0..*]</TD></TR>
<TR><TD ALIGN="LEFT" >-   loadingUserList: List&lt;User&gt; [0..*]</TD></TR>
<TR><TD ALIGN="LEFT" >+   permissionRule: GrantPermissionRule [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   scenario: ActivityScenario&lt;MainActivity&gt; [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   user: User [0..1]</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >- initalizeUserAndEvents()</TD></TR>
<TR><TD ALIGN="LEFT" >+ tearDown()</TD></TR>
<TR><TD ALIGN="LEFT" >+ testInitialUI()</TD></TR>
<TR><TD ALIGN="LEFT" >+ testNavigateToAdmin()</TD></TR>
<TR><TD ALIGN="LEFT" >+ testNavigateToEvent()</TD></TR>
<TR><TD ALIGN="LEFT" >+ testNavigateToHome()</TD></TR>
<TR><TD ALIGN="LEFT" >+ testNavigateToNotifications()</TD></TR>
<TR><TD ALIGN="LEFT" >+ testNavigateToOrganizer()</TD></TR>
<TR><TD ALIGN="LEFT" >+ testNavigateToProfile()</TD></TR>
<TR><TD ALIGN="LEFT" >+ testNavigateToProfileBottom()</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

TestLoginFragment806146256[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)TestLoginFragment</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >-   loginFragment: LoginFragment [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >+   permissionRule: GrantPermissionRule [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   scenario: ActivityScenario&lt;MainActivity&gt; [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   user: User [0..1]</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >+ testExistingUserWithEventID()</TD></TR>
<TR><TD ALIGN="LEFT" >+ testLoginWithoutEventID()</TD></TR>
<TR><TD ALIGN="LEFT" >+ testNewUserWithEventID()</TD></TR>
<TR><TD ALIGN="LEFT" >+ testNewUserWithoutEventID()</TD></TR>
<TR><TD ALIGN="LEFT" >+ testTestModeActivation()</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

TestOrganizerMenuFragment806146256[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)TestOrganizerMenuFragment</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >+   permissionRule: GrantPermissionRule [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   scenario: ActivityScenario&lt;MainActivity&gt; [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   testEventId: String [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   user: User [0..1]</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >+ disableAnimations()</TD></TR>
<TR><TD ALIGN="LEFT" >- initializeUserAndEvents()</TD></TR>
<TR><TD ALIGN="LEFT" >+ tearDown()</TD></TR>
<TR><TD ALIGN="LEFT" >+ testCancelEntrant()</TD></TR>
<TR><TD ALIGN="LEFT" >+ testDrawReplacementButton()</TD></TR>
<TR><TD ALIGN="LEFT" >+ testGenerateQRCode()</TD></TR>
<TR><TD ALIGN="LEFT" >+ testNavigateToViewAcceptedList()</TD></TR>
<TR><TD ALIGN="LEFT" >+ testNavigateToViewWaitingList()</TD></TR>
<TR><TD ALIGN="LEFT" >+ testRemovePosterButton()</TD></TR>
<TR><TD ALIGN="LEFT" >+ testSampleAttendeesButton()</TD></TR>
<TR><TD ALIGN="LEFT" >+ testUIComponentsAreDisplayed()</TD></TR>
<TR><TD ALIGN="LEFT" >+ testUploadPosterButton()</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

TestProfileFragment806146256[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)TestProfileFragment</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >+   EventList: List&lt;Event&gt; [0..*]</TD></TR>
<TR><TD ALIGN="LEFT" >+   permissionRule: GrantPermissionRule [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   scenario: ActivityScenario&lt;MainActivity&gt; [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   user: User [0..1]</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >- initalizeUserAndEvents()</TD></TR>
<TR><TD ALIGN="LEFT" >+ tearDown()</TD></TR>
<TR><TD ALIGN="LEFT" >+ testProfileEdit()</TD></TR>
<TR><TD ALIGN="LEFT" >+ testProfileUploadAndRemove()</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

ViewAcceptedListFragment1005856845[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)ViewAcceptedListFragment</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >-   acceptedListView: ListView [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   backButton: Button [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   eventId: String [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   waitingList: WaitingList [0..1]</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >- displayAcceptedList()</TD></TR>
<TR><TD ALIGN="LEFT" >- navigateBackToOrganizerMenu()</TD></TR>
<TR><TD ALIGN="LEFT" >+ newInstance(eventId: String): ViewAcceptedListFragment</TD></TR>
<TR><TD ALIGN="LEFT" >+ onCreate(savedInstanceState: Bundle)</TD></TR>
<TR><TD ALIGN="LEFT" >+ onCreateView(inflater: LayoutInflater, container: ViewGroup, savedInstanceState: Bundle): View</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

ViewCanceledListFragment1005856845[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)ViewCanceledListFragment</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >-   backButton: Button [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   canceledListView: ListView [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   eventId: String [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   waitingList: WaitingList [0..1]</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >- displayCanceledList()</TD></TR>
<TR><TD ALIGN="LEFT" >- navigateBackToOrganizerMenu()</TD></TR>
<TR><TD ALIGN="LEFT" >+ newInstance(eventId: String): ViewCanceledListFragment</TD></TR>
<TR><TD ALIGN="LEFT" >+ onCreate(savedInstanceState: Bundle)</TD></TR>
<TR><TD ALIGN="LEFT" >+ onCreateView(inflater: LayoutInflater, container: ViewGroup, savedInstanceState: Bundle): View</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

ViewSignedListFragment1005856845[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)ViewSignedListFragment</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >-   backButton: Button [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   eventId: String [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   signedUpListView: ListView [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   waitingList: WaitingList [0..1]</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >- displaySignedUpList()</TD></TR>
<TR><TD ALIGN="LEFT" >- navigateBackToOrganizerMenu()</TD></TR>
<TR><TD ALIGN="LEFT" >+ newInstance(eventId: String): ViewSignedListFragment</TD></TR>
<TR><TD ALIGN="LEFT" >+ onCreate(savedInstanceState: Bundle)</TD></TR>
<TR><TD ALIGN="LEFT" >+ onCreateView(inflater: LayoutInflater, container: ViewGroup, savedInstanceState: Bundle): View</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

ViewWaitingListFragment1005856845[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)ViewWaitingListFragment</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >-   backButton: Button [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   eventId: String [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   waitingList: WaitingList [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   waitingListView: ListView [0..1]</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >- displayWaitingList()</TD></TR>
<TR><TD ALIGN="LEFT" >- navigateBackToOrganizerMenu()</TD></TR>
<TR><TD ALIGN="LEFT" >+ newInstance(eventId: String): ViewWaitingListFragment</TD></TR>
<TR><TD ALIGN="LEFT" >+ onCreate(savedInstanceState: Bundle)</TD></TR>
<TR><TD ALIGN="LEFT" >+ onCreateView(inflater: LayoutInflater, container: ViewGroup, savedInstanceState: Bundle): View</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

WaitingList1005856845[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)WaitingList</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >-   acceptedParticipantIds: List&lt;String&gt; [0..*]</TD></TR>
<TR><TD ALIGN="LEFT" >-   canceledParticipantIds: List&lt;String&gt; [0..*]</TD></TR>
<TR><TD ALIGN="LEFT" >-   eventId: String [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   maxParticipants: int [1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   signedUpParticipantIds: List&lt;String&gt; [0..*]</TD></TR>
<TR><TD ALIGN="LEFT" >-   waitingListLimit: int [1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   waitingParticipantIds: List&lt;String&gt; [0..*]</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >+ drawReplacement(replacementSize: int): List&lt;String&gt;</TD></TR>
<TR><TD ALIGN="LEFT" >+ loadFromFirebase(): Task&lt;DocumentSnapshot&gt;</TD></TR>
<TR><TD ALIGN="LEFT" >+ participantSignsUp(participantId: String): String</TD></TR>
<TR><TD ALIGN="LEFT" >+ sampleParticipants(sampleSize: int): List&lt;String&gt;</TD></TR>
<TR><TD ALIGN="LEFT" >+ updateToFirebase(): Task&lt;Void&gt;</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];
} 
} 

'edges    
Event1271688147 -> WaitingList1005856845[label="waitingList
[0..1]"];
MainActivity806146256 -> OrganizerMenuFragment1005856845[label="organizerMenuFragment
[0..1]"];
OrganizerMenuFragment1005856845 -> Event1271688147[label="currentEvent
[0..1]"];
OrganizerMenuFragment1005856845 -> MyNotificationManager92359351[label="notificationManager
[0..1]"];
OrganizerMenuFragment1005856845 -> QRcodeGenerator1444445836[label="qrCodeGenerator
[0..1]"];
OrganizerMenuFragment1005856845 -> ViewAcceptedListFragment1005856845[label="navigateToViewAcceptedList() -> newInstance()"];
OrganizerMenuFragment1005856845 -> ViewCanceledListFragment1005856845[label="navigateToCanceledList() -> newInstance()"];
OrganizerMenuFragment1005856845 -> ViewSignedListFragment1005856845[label="navigateToViewSignedList() -> newInstance()"];
OrganizerMenuFragment1005856845 -> ViewWaitingListFragment1005856845[label="navigateToViewWaitingList() -> newInstance()"];
OrganizerMenuFragment1005856845 -> WaitingList1005856845[label="waitingList
[0..1]"];
TestAdminFragment806146256 -> MainActivity806146256[label="scenario
[0..1]"];
TestHomeFragment806146256 -> MainActivity806146256[label="scenario
[0..1]"];
TestLoginFragment806146256 -> MainActivity806146256[label="scenario
[0..1]"];
TestOrganizerMenuFragment806146256 -> MainActivity806146256[label="scenario
[0..1]"];
TestProfileFragment806146256 -> MainActivity806146256[label="scenario
[0..1]"];
ViewAcceptedListFragment1005856845 -> OrganizerMenuFragment1005856845[label="navigateBackToOrganizerMenu() -> newInstance()"];
ViewAcceptedListFragment1005856845 -> WaitingList1005856845[label="waitingList
[0..1]"];
ViewCanceledListFragment1005856845 -> OrganizerMenuFragment1005856845[label="navigateBackToOrganizerMenu() -> newInstance()"];
ViewCanceledListFragment1005856845 -> WaitingList1005856845[label="waitingList
[0..1]"];
ViewSignedListFragment1005856845 -> OrganizerMenuFragment1005856845[label="navigateBackToOrganizerMenu() -> newInstance()"];
ViewSignedListFragment1005856845 -> WaitingList1005856845[label="waitingList
[0..1]"];
ViewWaitingListFragment1005856845 -> OrganizerMenuFragment1005856845[label="navigateBackToOrganizerMenu() -> newInstance()"];
ViewWaitingListFragment1005856845 -> WaitingList1005856845[label="waitingList
[0..1]"];
    
}
@enduml